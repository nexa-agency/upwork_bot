import asyncio
import logging
import os
from aiogram import Router
from dotenv import load_dotenv
from aiogram.types import Message
from bot.upwork_api import get_jobs
from bot.openai_api import generate_cover_letter

load_dotenv()

ADMIN_ID = int(os.getenv("ADMIN_ID"))

router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
keywords = ["telegram", "bot", "node.js"]
min_budget = 100
job_type = ["fixed", "hourly"]
auto_submit = True  # –í–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–∞—á–∞

async def send_notification(bot, message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    await bot.send_message(ADMIN_ID, message)

async def process_jobs(bot):
    """–§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫."""
    global keywords, min_budget, job_type, auto_submit
    while True:
        if auto_submit:
            jobs = get_jobs(keywords, min_budget, job_type)
            if jobs:
                for job in jobs:
                    job_id = job['node']['id']
                    job_title = job['node']['title']
                    job_description = job['node']['description']
                    job_url = job['node']['url']

                    cover_letter = generate_cover_letter(job_description)

                    # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ Upwork API
                    # submit_application(job_id, cover_letter)

                    message = f"üì© –ù–∞ –≤–∞–∫–∞–Ω—Å–∏—é: {job_url}\nüöÄ –ë—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω Cover Letter:\n---\n{cover_letter}\n---"
                    await send_notification(bot, message)
            else:
                logging.info("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π.")
        else:
            logging.info("–ê–≤—Ç–æ–ø–æ–¥–∞—á–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        await asyncio.sleep(600)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π
async def start_job_processing(bot):
    asyncio.create_task(process_jobs(bot))

@router.message(commands=["set_keywords"])
async def set_keywords_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π."""
    global keywords
    keywords = message.text.split()[1:]  # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer(f"–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: {keywords}")

@router.message(commands=["set_min_budget"])
async def set_min_budget_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π."""
    global min_budget
    try:
        min_budget = int(message.text.split()[1])  # –ü–æ–ª—É—á–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        await message.answer(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {min_budget}")
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±—é–¥–∂–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ.")

@router.message(commands=["set_job_type"])
async def set_job_type_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π."""
    global job_type
    job_type = message.text.split()[1:]  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer(f"–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {job_type}")

@router.message(commands=["pause"])
async def pause_command(message: Message):
    """–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–ø–æ–¥–∞—á—É –∑–∞—è–≤–æ–∫."""
    global auto_submit
    auto_submit = False
    await message.answer("–ê–≤—Ç–æ–ø–æ–¥–∞—á–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

@router.message(commands=["resume"])
async def resume_command(message: Message):
    """–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –∞–≤—Ç–æ–ø–æ–¥–∞—á—É –∑–∞—è–≤–æ–∫."""
    global auto_submit
    auto_submit = True
    await message.answer("–ê–≤—Ç–æ–ø–æ–¥–∞—á–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞.")